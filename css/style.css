* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.background {
    display: block;
    position: fixed;
    z-index: -1;
    width: 100%;
    height: 100%;

    background: /* backkground strategy: https://css-tricks.com/css-basics-using-multiple-backgrounds +  https://stackoverflow.com/questions/19502454/background-sizecover-performance-issues */
        linear-gradient(45deg, rgba(40,156,176,0.7) 0%, rgba(59,2,99,0.7) 100%) no-repeat center center fixed, /* gradient made with https://cssgradient.io */
        url("../images/background.jpg") no-repeat center center fixed;
    background-size: cover;
} 

body {
    display: flex;
    min-height: 100vh;
    flex-direction: column;
    color: seashell;
    font-family: 'Poppins', sans-serif;
}

.content-wrap {
    flex: 1;
    margin: 0% 15%;
}

/* Mobile */
@media only screen and (max-width: 400px) { /* https://stackoverflow.com/questions/32574100/why-media-queries-has-less-priority-than-no-media-queries-css */
    .content-wrap {
        margin: 0% 0%;
    }
}

.link { /* Link styling learned from https://www.dannyguo.com/blog/animated-multiline-link-underlines-with-css */
    color: seashell;
    text-decoration: none; /* Remove default underline */
    background-image: linear-gradient(currentColor, currentColor); /* Gradients are manages as images by css, so we use "background-image" */
    background-position: 50% 100%;
    background-repeat: no-repeat;
    background-size: 0% 1px;
    transition: background-size .4s ease;
}
.link:hover, .link:focus {
    background-size: 100% 1px;
}

header {
    font-family: "Josefin Sans", sans-serif;
    border-bottom: solid white 1px;
    margin: 0% 15%;
    padding: 2% 0%;
}

header ul {
    display: flex;
    justify-content: space-around;
    list-style-type: none;
}

header li {
    font-size: 1.2vmax;
}

section {
    /* margin: 0% 15%; */
    margin-top: 4%;
    display: flex;
    flex-wrap: nowrap;
    flex-direction: column;
    align-items: center;
}

section h1 {
    overflow-wrap: anywhere;
    font-weight: 800;
    font-size: 6vmax;
    text-align: center;
    text-transform: uppercase;
}

#arrow-down {
    margin: 2vh;
    padding: 2vh;
    box-shadow: 5px -5px 0 0 white inset;
    transform: rotate(-45deg);
}

section h2 {
    font-size: 1.2vmax;
    display: flex;
    flex-flow: column;
    align-items: center;
}

footer {
    width: 100%;
    bottom: 0px;
    display: flex;
    flex-direction: column;
    background: rgba(0, 20, 30, 0.98);
    border-top: 1px solid white;
}

footer #copyright {
    font-size: 0.7vmax;
    text-align: center;
}

/*
footer .columns {
    padding: 2% 15% 2% 15%;
    display: flex;
    justify-content: left;
}

footer .column-box:first-child {
    margin-left: 0px;
}

footer .column-box {
    border: 1px solid white;
    margin-left: 10px;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    
}
footer h1 {
    font-family: 'Poppins', sans-serif;
    font-weight: bold;
    font-size: 2em;
    text-transform: capit;
    letter-spacing: 1px;
}

footer p {
    padding-left: 10px;
}
*/

/* NOTES */

/* SELECTORS
Descendant .selectors are used to match to any nested element. 
Child > combinators, on the other hand, only match to the direct 
child element and are defined by the greater than symbol. 
The selector on the right must be the direct child of the element 
on the left.
*/